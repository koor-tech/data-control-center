# Default values for data-control-center.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/koorinc/data-control-center
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  # Specifies wheter RBAC roles should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8282

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Will be put in a Secret and used as env vars
additionalEnv: {}

postInstallJob:
  # -- If enabled,  will create a Ceph dashboard admin user `data-control-center`
  # either on Rook/Ceph cluster pre upgrade(when having data-control-center as
  # a helm dependency) or on post install of data-control-center (needs existing
  # Rook/Ceph cluster). This user will be used for retrieving cluster info and
  # stats.
  enabled: true
  # @ignore
  image:
    repository: quay.io/ceph/ceph
    pullPolicy: IfNotPresent
    tag: v17.2.6-20230826

# -- data-control-center config, documentation here: https://github.com/koor-tech/data-control-center/blob/main/docs/configuration.md#reference
config:
  namespace: # Defaults to current namespace
  logLevel: 'INFO'
  mode: 'release'
  http:
    listen: ':8282'
    sessions:
      cookieSecret: 'your_generated_cookie_secret'
      domain: 'localhost'
  jwt:
    secret: 'your_generated_jwt_secret'
  ceph:
    api:
      url: 'https://rook-ceph-mgr-dashboard:8443/api'
      username: 'data-control-center'
      # -- Password is auto generated if not set and retrieved using helm's lookup function
      password: null
      insecureSSL: true
  oauth2:
    providers: []
      #- name: 'keycloak'
      #  label: 'Keycloak'
      #  homepage: 'https://keycloak.example.com'
      #  type: 'generic'
      #  redirectURL: 'https://chart-example.local/api/oauth2/callback/keycloak'
      #  clientID: 'your_keycloak_oauth2_client_id'
      #  clientSecret: 'your_keycloak_oauth2_client_secret'
      #  scopes:
      #    - openid
      #  endpoints:
      #    authURL: 'https://keycloak.example.com/auth/realms/yourrealm/protocol/openid-connect/auth'
      #    tokenURL: 'https://keycloak.example.com/auth/realms/yourrealm/protocol/openid-connect/token'
      #    userInfoURL: 'https://keycloak.example.com/auth/realms/yourrealm/protocol/openid-connect/userinfo'
  users: []
    #- username: 'exampl'
    #  password: 'notagoodpassword123'
