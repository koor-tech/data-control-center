{{- $password := "" -}}
{{- if .Values.config.ceph.api.password -}}
{{- $password = .Values.config.ceph.api.password -}}
{{- else -}}
# Retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (include "data-control-center.fullname" .)) | default dict -}}
{{- $secretData := (get $secretObj "data") | default dict -}}
# Set $secretData to existing secret data or generate a random one when not exists
{{- $password = (get $secretData "CEPH_DASHBOARD_PASSWORD" | default (randAlphaNum 32)) -}}
{{- end -}}
{{- $config := merge .Values.config (dict "ceph" (dict "api" (dict "password" $password))) -}}
{{- if empty .Values.config.namespace -}}
{{- $config = merge $config (dict "config" (dict "namespace" .Release.Namespace))) -}}
{{- end -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "data-control-center.fullname" . }}
  labels:
    {{- include "data-control-center.labels" . | nindent 4 }}
data:
  CEPH_DASHBOARD_USERNAME: {{ $config.ceph.api.username | b64enc }}
  CEPH_DASHBOARD_PASSWORD: {{ $password | b64enc }}
{{- range $k, $v := .Values.additionalEnv }}
  {{ $k }}: {{ $v | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "data-control-center.fullname" . }}-config
  labels:
    {{- include "data-control-center.labels" . | nindent 4 }}
data:
  config.yaml: {{ tpl ($config | toYaml) . | b64enc }}
