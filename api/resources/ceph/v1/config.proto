syntax = "proto3";

package api.resources.ceph.v1;

import "validate/validate.proto";

option go_package = "github.com/koor-tech/data-control-center/gen/go/api/resources/ceph;ceph";

// Osd Scrubbing schedule config
message OSDScrubbingSchedule {
  bool apply_schedule = 1;
  optional int64 max_scrub_ops = 2 [(validate.rules).int64 = {gte: 0, lt: 9999999}];
  optional int64 begin_hour = 3 [(validate.rules).int64 = {gte: 0, lt: 23}];
  optional int64 end_hour = 4 [(validate.rules).int64 = {gte: 0, lt: 23}];
  optional int64 begin_week_day = 5 [(validate.rules).int64 = {gte: 0, lt: 6}];
  optional int64 end_week_day = 6 [(validate.rules).int64 = {gte: 0, lt: 6}];
  optional string min_scrub_interval = 7 [(validate.rules).string = {
    min_len: 3,
    max_bytes: 16,
    pattern: "^([0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$"
  }];
  optional string max_scrub_interval = 8 [(validate.rules).string = {
    min_len: 3,
    max_bytes: 16,
    pattern: "^([0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$"
  }];
  optional string deep_scrub_interval = 9 [(validate.rules).string = {
    min_len: 3,
    max_bytes: 16,
    pattern: "^([0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$"
  }];
  optional string scrub_sleep_seconds = 10 [(validate.rules).string = {
    min_len: 3,
    max_bytes: 16,
    pattern: "^([0-9]+(\\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$"
  }];
}
