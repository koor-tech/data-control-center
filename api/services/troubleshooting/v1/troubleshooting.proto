syntax = "proto3";

package api.services.troubleshooting.v1;

import "validate/validate.proto";

option go_package = "github.com/koor-tech/data-control-center/gen/go/api/services/troubleshooting";

message GetTroubleshootReportRequest {}

message GetTroubleshootReportResponse {
  string report = 1;
}

message GetNetworkTestStatusRequest {}

message GetNetworkTestStatusResponse {
  bool running = 1;
  bool complete = 2;
  string logs = 3;
}

enum NetworkTestOutputFormat {
  NETWORK_TEST_OUTPUT_FORMAT_UNSPECIFIED = 0;
  NETWORK_TEST_OUTPUT_FORMAT_CSV = 1;
  NETWORK_TEST_OUTPUT_FORMAT_EXCELIZE = 2;
}

message StartNetworkTestRequest {
  bool host_network = 1;
  NetworkTestOutputFormat output_format = 2 [(validate.rules).enum.defined_only = true];
}

message StartNetworkTestResponse {
  bool already_running = 1;
}

message CancelNetworkTestRequest {}

message CancelNetworkTestResponse {
  bool not_running = 1;
}

message GetNetworkTestResultsRequest {}

message GetNetworkTestResultsResponse {
  string file_name = 1;
  string file_type = 2;
  bytes file_contents = 3;
}

service TroubleshootingService {
  rpc GetTroubleshootReport(GetTroubleshootReportRequest) returns (GetTroubleshootReportResponse) {}

  rpc GetNetworkTestStatus(GetNetworkTestStatusRequest) returns (GetNetworkTestStatusResponse) {}
  rpc StartNetworkTest(StartNetworkTestRequest) returns (StartNetworkTestResponse) {}
  rpc CancelNetworkTest(CancelNetworkTestRequest) returns (CancelNetworkTestResponse) {}
  rpc GetNetworkTestResults(GetNetworkTestResultsRequest) returns (GetNetworkTestResultsResponse) {}
}
