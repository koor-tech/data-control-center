syntax = "proto3";

package stats;

option go_package = "github.com/koor-tech/data-control-center/gen/go/api/services/stats";

enum HealthStatus {
    HEALTH_OK = 0;
    HEALTH_WARN = 1;
    HEALTH_ERR = 2;
}

message DaemonCrash {
    string description = 1;
}

message Daemon {
    string name = 1;
    string status = 2;
    string description = 3;
}

message MonService {
    int32 daemon_count = 1;
    string quorum = 2;
    string age = 3;
}

message MgrService {
    string active = 1;
    repeated string standbys = 2;
    string since = 3;
}

message MdsService {
    int32 daemons_up = 1;
    int32 hot_standby_count = 2;
}

message OsdService {
    int32 osd_count = 1;
    int32 osd_up = 2;
    int32 osd_in = 3;
    string since = 4;
}

message RgwService {
    int32 active_daemon = 1;
    int32 host_count = 2;
    int32 zone_count = 3;
}

message VolumeStatus {
    string description = 1;
}

message PoolStatus {
    int32 pool_count = 1;
    int32 pgs = 2;
}

message ObjectStatus {
    string object_count = 1;
    string size = 2;
}

message UsageStatus {
    string used = 1;
    string available = 2;
    string total = 3;
}

message IoStatus {
    string client_read = 1;
    string client_read_ops = 2;
    string client_write_ops = 3;
}

message PGs {
    int32 active_clean = 1;
}

message Services {
    MonService mon = 1;
    MgrService mgr = 2;
    MdsService mds = 3;
    OsdService osd = 4;
    RgwService rgw = 5;
}

message Data {
    VolumeStatus volumes = 1;
    PoolStatus pools = 2;
    ObjectStatus objects = 3;
    UsageStatus usage = 4;
    PGs pgs = 5;
}

message ClusterStatusResponse {
    string id = 1;
    HealthStatus health = 2;
    repeated DaemonCrash daemon_crashes = 3;

    Services services = 4;
    Data data = 5;

    IoStatus io = 6;
}

message EmptyRequest {}

service StatsService  {
    rpc GetClusterStats(EmptyRequest) returns (ClusterStatusResponse) {}
}
