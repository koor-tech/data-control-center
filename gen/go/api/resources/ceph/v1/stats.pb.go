// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: api/resources/ceph/v1/stats.proto

package cephv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterHealth int32

const (
	ClusterHealth_CLUSTER_HEALTH_UNSPECIFIED ClusterHealth = 0
	ClusterHealth_CLUSTER_HEALTH_OFFLINE     ClusterHealth = 1
	ClusterHealth_CLUSTER_HEALTH_OK          ClusterHealth = 2
	ClusterHealth_CLUSTER_HEALTH_WARN        ClusterHealth = 3
	ClusterHealth_CLUSTER_HEALTH_ERR         ClusterHealth = 4
)

// Enum value maps for ClusterHealth.
var (
	ClusterHealth_name = map[int32]string{
		0: "CLUSTER_HEALTH_UNSPECIFIED",
		1: "CLUSTER_HEALTH_OFFLINE",
		2: "CLUSTER_HEALTH_OK",
		3: "CLUSTER_HEALTH_WARN",
		4: "CLUSTER_HEALTH_ERR",
	}
	ClusterHealth_value = map[string]int32{
		"CLUSTER_HEALTH_UNSPECIFIED": 0,
		"CLUSTER_HEALTH_OFFLINE":     1,
		"CLUSTER_HEALTH_OK":          2,
		"CLUSTER_HEALTH_WARN":        3,
		"CLUSTER_HEALTH_ERR":         4,
	}
)

func (x ClusterHealth) Enum() *ClusterHealth {
	p := new(ClusterHealth)
	*p = x
	return p
}

func (x ClusterHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_api_resources_ceph_v1_stats_proto_enumTypes[0].Descriptor()
}

func (ClusterHealth) Type() protoreflect.EnumType {
	return &file_api_resources_ceph_v1_stats_proto_enumTypes[0]
}

func (x ClusterHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterHealth.Descriptor instead.
func (ClusterHealth) EnumDescriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{0}
}

type MonService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaemonCount  int32                  `protobuf:"varint,1,opt,name=daemon_count,json=daemonCount,proto3" json:"daemon_count,omitempty"`
	Quorum       []string               `protobuf:"bytes,2,rep,name=quorum,proto3" json:"quorum,omitempty"`
	CreatedSince *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_since,json=createdSince,proto3" json:"created_since,omitempty"`
	UpdatedSince *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_since,json=updatedSince,proto3" json:"updated_since,omitempty"`
}

func (x *MonService) Reset() {
	*x = MonService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonService) ProtoMessage() {}

func (x *MonService) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonService.ProtoReflect.Descriptor instead.
func (*MonService) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{0}
}

func (x *MonService) GetDaemonCount() int32 {
	if x != nil {
		return x.DaemonCount
	}
	return 0
}

func (x *MonService) GetQuorum() []string {
	if x != nil {
		return x.Quorum
	}
	return nil
}

func (x *MonService) GetCreatedSince() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedSince
	}
	return nil
}

func (x *MonService) GetUpdatedSince() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedSince
	}
	return nil
}

type MgrService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active       string                 `protobuf:"bytes,1,opt,name=active,proto3" json:"active,omitempty"`
	Standbys     []string               `protobuf:"bytes,2,rep,name=standbys,proto3" json:"standbys,omitempty"`
	UpdatedSince *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_since,json=updatedSince,proto3" json:"updated_since,omitempty"`
}

func (x *MgrService) Reset() {
	*x = MgrService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MgrService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MgrService) ProtoMessage() {}

func (x *MgrService) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MgrService.ProtoReflect.Descriptor instead.
func (*MgrService) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{1}
}

func (x *MgrService) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *MgrService) GetStandbys() []string {
	if x != nil {
		return x.Standbys
	}
	return nil
}

func (x *MgrService) GetUpdatedSince() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedSince
	}
	return nil
}

type MdsService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaemonsUp       int32 `protobuf:"varint,1,opt,name=daemons_up,json=daemonsUp,proto3" json:"daemons_up,omitempty"`
	HotStandbyCount int32 `protobuf:"varint,2,opt,name=hot_standby_count,json=hotStandbyCount,proto3" json:"hot_standby_count,omitempty"`
}

func (x *MdsService) Reset() {
	*x = MdsService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdsService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdsService) ProtoMessage() {}

func (x *MdsService) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdsService.ProtoReflect.Descriptor instead.
func (*MdsService) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{2}
}

func (x *MdsService) GetDaemonsUp() int32 {
	if x != nil {
		return x.DaemonsUp
	}
	return 0
}

func (x *MdsService) GetHotStandbyCount() int32 {
	if x != nil {
		return x.HotStandbyCount
	}
	return 0
}

type OsdService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsdCount          int32                  `protobuf:"varint,1,opt,name=osd_count,json=osdCount,proto3" json:"osd_count,omitempty"`
	OsdUp             int32                  `protobuf:"varint,2,opt,name=osd_up,json=osdUp,proto3" json:"osd_up,omitempty"`
	OsdIn             int32                  `protobuf:"varint,3,opt,name=osd_in,json=osdIn,proto3" json:"osd_in,omitempty"`
	OsdUpUpdatedSince *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=osd_up_updated_since,json=osdUpUpdatedSince,proto3" json:"osd_up_updated_since,omitempty"`
	OsdInUpdatedSince *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=osd_in_updated_since,json=osdInUpdatedSince,proto3" json:"osd_in_updated_since,omitempty"`
}

func (x *OsdService) Reset() {
	*x = OsdService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsdService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsdService) ProtoMessage() {}

func (x *OsdService) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsdService.ProtoReflect.Descriptor instead.
func (*OsdService) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{3}
}

func (x *OsdService) GetOsdCount() int32 {
	if x != nil {
		return x.OsdCount
	}
	return 0
}

func (x *OsdService) GetOsdUp() int32 {
	if x != nil {
		return x.OsdUp
	}
	return 0
}

func (x *OsdService) GetOsdIn() int32 {
	if x != nil {
		return x.OsdIn
	}
	return 0
}

func (x *OsdService) GetOsdUpUpdatedSince() *timestamppb.Timestamp {
	if x != nil {
		return x.OsdUpUpdatedSince
	}
	return nil
}

func (x *OsdService) GetOsdInUpdatedSince() *timestamppb.Timestamp {
	if x != nil {
		return x.OsdInUpdatedSince
	}
	return nil
}

type RgwService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveDaemon int32 `protobuf:"varint,1,opt,name=active_daemon,json=activeDaemon,proto3" json:"active_daemon,omitempty"`
	HostCount    int32 `protobuf:"varint,2,opt,name=host_count,json=hostCount,proto3" json:"host_count,omitempty"`
	ZoneCount    int32 `protobuf:"varint,3,opt,name=zone_count,json=zoneCount,proto3" json:"zone_count,omitempty"`
}

func (x *RgwService) Reset() {
	*x = RgwService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RgwService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RgwService) ProtoMessage() {}

func (x *RgwService) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RgwService.ProtoReflect.Descriptor instead.
func (*RgwService) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{4}
}

func (x *RgwService) GetActiveDaemon() int32 {
	if x != nil {
		return x.ActiveDaemon
	}
	return 0
}

func (x *RgwService) GetHostCount() int32 {
	if x != nil {
		return x.HostCount
	}
	return 0
}

func (x *RgwService) GetZoneCount() int32 {
	if x != nil {
		return x.ZoneCount
	}
	return 0
}

type Services struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mon *MonService `protobuf:"bytes,1,opt,name=mon,proto3" json:"mon,omitempty"`
	Mgr *MgrService `protobuf:"bytes,2,opt,name=mgr,proto3" json:"mgr,omitempty"`
	Mds *MdsService `protobuf:"bytes,3,opt,name=mds,proto3" json:"mds,omitempty"`
	Osd *OsdService `protobuf:"bytes,4,opt,name=osd,proto3" json:"osd,omitempty"`
	Rgw *RgwService `protobuf:"bytes,5,opt,name=rgw,proto3" json:"rgw,omitempty"`
}

func (x *Services) Reset() {
	*x = Services{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Services) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Services) ProtoMessage() {}

func (x *Services) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Services.ProtoReflect.Descriptor instead.
func (*Services) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{5}
}

func (x *Services) GetMon() *MonService {
	if x != nil {
		return x.Mon
	}
	return nil
}

func (x *Services) GetMgr() *MgrService {
	if x != nil {
		return x.Mgr
	}
	return nil
}

func (x *Services) GetMds() *MdsService {
	if x != nil {
		return x.Mds
	}
	return nil
}

func (x *Services) GetOsd() *OsdService {
	if x != nil {
		return x.Osd
	}
	return nil
}

func (x *Services) GetRgw() *RgwService {
	if x != nil {
		return x.Rgw
	}
	return nil
}

type PGs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveClean int32 `protobuf:"varint,1,opt,name=active_clean,json=activeClean,proto3" json:"active_clean,omitempty"`
}

func (x *PGs) Reset() {
	*x = PGs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PGs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PGs) ProtoMessage() {}

func (x *PGs) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PGs.ProtoReflect.Descriptor instead.
func (*PGs) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{6}
}

func (x *PGs) GetActiveClean() int32 {
	if x != nil {
		return x.ActiveClean
	}
	return 0
}

type Pools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pools int32 `protobuf:"varint,1,opt,name=pools,proto3" json:"pools,omitempty"`
	Pgs   *PGs  `protobuf:"bytes,2,opt,name=pgs,proto3" json:"pgs,omitempty"`
}

func (x *Pools) Reset() {
	*x = Pools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pools) ProtoMessage() {}

func (x *Pools) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pools.ProtoReflect.Descriptor instead.
func (*Pools) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{7}
}

func (x *Pools) GetPools() int32 {
	if x != nil {
		return x.Pools
	}
	return 0
}

func (x *Pools) GetPgs() *PGs {
	if x != nil {
		return x.Pgs
	}
	return nil
}

type Objects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectCount int32 `protobuf:"varint,1,opt,name=object_count,json=objectCount,proto3" json:"object_count,omitempty"`
	Size        int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Objects) Reset() {
	*x = Objects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Objects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Objects) ProtoMessage() {}

func (x *Objects) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Objects.ProtoReflect.Descriptor instead.
func (*Objects) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{8}
}

func (x *Objects) GetObjectCount() int32 {
	if x != nil {
		return x.ObjectCount
	}
	return 0
}

func (x *Objects) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Usage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Used      int64 `protobuf:"varint,1,opt,name=used,proto3" json:"used,omitempty"`
	Available int64 `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Total     int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Usage) Reset() {
	*x = Usage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usage) ProtoMessage() {}

func (x *Usage) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usage.ProtoReflect.Descriptor instead.
func (*Usage) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{9}
}

func (x *Usage) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *Usage) GetAvailable() int64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *Usage) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volumes int32    `protobuf:"varint,1,opt,name=volumes,proto3" json:"volumes,omitempty"`
	Pools   *Pools   `protobuf:"bytes,2,opt,name=pools,proto3" json:"pools,omitempty"`
	Objects *Objects `protobuf:"bytes,3,opt,name=objects,proto3" json:"objects,omitempty"`
	Usage   *Usage   `protobuf:"bytes,4,opt,name=usage,proto3" json:"usage,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{10}
}

func (x *Data) GetVolumes() int32 {
	if x != nil {
		return x.Volumes
	}
	return 0
}

func (x *Data) GetPools() *Pools {
	if x != nil {
		return x.Pools
	}
	return nil
}

func (x *Data) GetObjects() *Objects {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *Data) GetUsage() *Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

type IOPS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientRead     int64 `protobuf:"varint,1,opt,name=client_read,json=clientRead,proto3" json:"client_read,omitempty"`
	ClientWrite    int64 `protobuf:"varint,2,opt,name=client_write,json=clientWrite,proto3" json:"client_write,omitempty"`
	ClientReadOps  int64 `protobuf:"varint,3,opt,name=client_read_ops,json=clientReadOps,proto3" json:"client_read_ops,omitempty"`
	ClientWriteOps int64 `protobuf:"varint,4,opt,name=client_write_ops,json=clientWriteOps,proto3" json:"client_write_ops,omitempty"`
}

func (x *IOPS) Reset() {
	*x = IOPS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IOPS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOPS) ProtoMessage() {}

func (x *IOPS) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOPS.ProtoReflect.Descriptor instead.
func (*IOPS) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{11}
}

func (x *IOPS) GetClientRead() int64 {
	if x != nil {
		return x.ClientRead
	}
	return 0
}

func (x *IOPS) GetClientWrite() int64 {
	if x != nil {
		return x.ClientWrite
	}
	return 0
}

func (x *IOPS) GetClientReadOps() int64 {
	if x != nil {
		return x.ClientReadOps
	}
	return 0
}

func (x *IOPS) GetClientWriteOps() int64 {
	if x != nil {
		return x.ClientWriteOps
	}
	return 0
}

type Crash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Crash) Reset() {
	*x = Crash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Crash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crash) ProtoMessage() {}

func (x *Crash) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crash.ProtoReflect.Descriptor instead.
func (*Crash) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{12}
}

func (x *Crash) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ClusterStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status   ClusterHealth `protobuf:"varint,2,opt,name=status,proto3,enum=api.resources.ceph.v1.ClusterHealth" json:"status,omitempty"`
	Crashes  []*Crash      `protobuf:"bytes,3,rep,name=crashes,proto3" json:"crashes,omitempty"`
	Services *Services     `protobuf:"bytes,4,opt,name=services,proto3" json:"services,omitempty"`
	Data     *Data         `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Test     string        `protobuf:"bytes,6,opt,name=test,proto3" json:"test,omitempty"`
	Iops     *IOPS         `protobuf:"bytes,7,opt,name=iops,proto3" json:"iops,omitempty"`
}

func (x *ClusterStats) Reset() {
	*x = ClusterStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStats) ProtoMessage() {}

func (x *ClusterStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStats.ProtoReflect.Descriptor instead.
func (*ClusterStats) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{13}
}

func (x *ClusterStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClusterStats) GetStatus() ClusterHealth {
	if x != nil {
		return x.Status
	}
	return ClusterHealth_CLUSTER_HEALTH_UNSPECIFIED
}

func (x *ClusterStats) GetCrashes() []*Crash {
	if x != nil {
		return x.Crashes
	}
	return nil
}

func (x *ClusterStats) GetServices() *Services {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ClusterStats) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ClusterStats) GetTest() string {
	if x != nil {
		return x.Test
	}
	return ""
}

func (x *ClusterStats) GetIops() *IOPS {
	if x != nil {
		return x.Iops
	}
	return nil
}

type ClusterRadar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterHealth     float32 `protobuf:"fixed32,1,opt,name=cluster_health,json=clusterHealth,proto3" json:"cluster_health,omitempty"`
	NodesHealth       float32 `protobuf:"fixed32,2,opt,name=nodes_health,json=nodesHealth,proto3" json:"nodes_health,omitempty"`
	CapacityAvailable float32 `protobuf:"fixed32,3,opt,name=capacity_available,json=capacityAvailable,proto3" json:"capacity_available,omitempty"`
	Stability         float32 `protobuf:"fixed32,4,opt,name=stability,proto3" json:"stability,omitempty"`
	Reliability       float32 `protobuf:"fixed32,5,opt,name=reliability,proto3" json:"reliability,omitempty"`
}

func (x *ClusterRadar) Reset() {
	*x = ClusterRadar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterRadar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterRadar) ProtoMessage() {}

func (x *ClusterRadar) ProtoReflect() protoreflect.Message {
	mi := &file_api_resources_ceph_v1_stats_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterRadar.ProtoReflect.Descriptor instead.
func (*ClusterRadar) Descriptor() ([]byte, []int) {
	return file_api_resources_ceph_v1_stats_proto_rawDescGZIP(), []int{14}
}

func (x *ClusterRadar) GetClusterHealth() float32 {
	if x != nil {
		return x.ClusterHealth
	}
	return 0
}

func (x *ClusterRadar) GetNodesHealth() float32 {
	if x != nil {
		return x.NodesHealth
	}
	return 0
}

func (x *ClusterRadar) GetCapacityAvailable() float32 {
	if x != nil {
		return x.CapacityAvailable
	}
	return 0
}

func (x *ClusterRadar) GetStability() float32 {
	if x != nil {
		return x.Stability
	}
	return 0
}

func (x *ClusterRadar) GetReliability() float32 {
	if x != nil {
		return x.Reliability
	}
	return 0
}

var File_api_resources_ceph_v1_stats_proto protoreflect.FileDescriptor

var file_api_resources_ceph_v1_stats_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x63, 0x65, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x0a,
	0x4d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x71,
	0x75, 0x6f, 0x72, 0x75, 0x6d, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x4d, 0x67, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x0a, 0x4d,
	0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x73, 0x5f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x6f, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x0a, 0x4f, 0x73, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x73, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x73, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x73, 0x64, 0x5f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x73, 0x64, 0x55, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x73, 0x64, 0x5f, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x73, 0x64, 0x49, 0x6e, 0x12, 0x4b,
	0x0a, 0x14, 0x6f, 0x73, 0x64, 0x5f, 0x75, 0x70, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6f, 0x73, 0x64, 0x55, 0x70, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x6f,
	0x73, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6f, 0x73, 0x64, 0x49, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x6f, 0x0a, 0x0a, 0x52, 0x67, 0x77, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x7a, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x93, 0x02, 0x0a, 0x08, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x03, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x03, 0x6d, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x03, 0x6d,
	0x67, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x67, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x03, 0x6d, 0x67, 0x72,
	0x12, 0x33, 0x0a, 0x03, 0x6d, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65,
	0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x03, 0x6d, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x03, 0x6f, 0x73, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x73, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x03, 0x6f, 0x73, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x72, 0x67,
	0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x67, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x03, 0x72, 0x67, 0x77, 0x22,
	0x28, 0x0a, 0x03, 0x50, 0x47, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x22, 0x4b, 0x0a, 0x05, 0x50, 0x6f, 0x6f,
	0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x70, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x47,
	0x73, 0x52, 0x03, 0x70, 0x67, 0x73, 0x22, 0x40, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4f, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc2, 0x01, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x05,
	0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73,
	0x12, 0x38, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9c,
	0x01, 0x0a, 0x04, 0x49, 0x4f, 0x50, 0x53, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x70, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x73, 0x22, 0x29, 0x0a,
	0x05, 0x43, 0x72, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc7, 0x02, 0x0a, 0x0c, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x72, 0x61, 0x73, 0x68,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x61, 0x73, 0x68, 0x52, 0x07, 0x63, 0x72, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12,
	0x3b, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x4f, 0x50, 0x53, 0x52, 0x04, 0x69, 0x6f,
	0x70, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61,
	0x64, 0x61, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x72, 0x65, 0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2a, 0x93, 0x01, 0x0a,
	0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1e,
	0x0a, 0x1a, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48,
	0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x4f, 0x4b, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41,
	0x4c, 0x54, 0x48, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x45, 0x52, 0x52,
	0x10, 0x04, 0x42, 0xec, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x42, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6f, 0x72, 0x2d,
	0x74, 0x65, 0x63, 0x68, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x65,
	0x70, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x65, 0x70, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41,
	0x52, 0x43, 0xaa, 0x02, 0x15, 0x41, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x65, 0x70, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x41, 0x70, 0x69,
	0x5c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5c, 0x43, 0x65, 0x70, 0x68, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x21, 0x41, 0x70, 0x69, 0x5c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x5c, 0x43, 0x65, 0x70, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x43, 0x65, 0x70, 0x68, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_resources_ceph_v1_stats_proto_rawDescOnce sync.Once
	file_api_resources_ceph_v1_stats_proto_rawDescData = file_api_resources_ceph_v1_stats_proto_rawDesc
)

func file_api_resources_ceph_v1_stats_proto_rawDescGZIP() []byte {
	file_api_resources_ceph_v1_stats_proto_rawDescOnce.Do(func() {
		file_api_resources_ceph_v1_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_resources_ceph_v1_stats_proto_rawDescData)
	})
	return file_api_resources_ceph_v1_stats_proto_rawDescData
}

var file_api_resources_ceph_v1_stats_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_resources_ceph_v1_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_resources_ceph_v1_stats_proto_goTypes = []interface{}{
	(ClusterHealth)(0),            // 0: api.resources.ceph.v1.ClusterHealth
	(*MonService)(nil),            // 1: api.resources.ceph.v1.MonService
	(*MgrService)(nil),            // 2: api.resources.ceph.v1.MgrService
	(*MdsService)(nil),            // 3: api.resources.ceph.v1.MdsService
	(*OsdService)(nil),            // 4: api.resources.ceph.v1.OsdService
	(*RgwService)(nil),            // 5: api.resources.ceph.v1.RgwService
	(*Services)(nil),              // 6: api.resources.ceph.v1.Services
	(*PGs)(nil),                   // 7: api.resources.ceph.v1.PGs
	(*Pools)(nil),                 // 8: api.resources.ceph.v1.Pools
	(*Objects)(nil),               // 9: api.resources.ceph.v1.Objects
	(*Usage)(nil),                 // 10: api.resources.ceph.v1.Usage
	(*Data)(nil),                  // 11: api.resources.ceph.v1.Data
	(*IOPS)(nil),                  // 12: api.resources.ceph.v1.IOPS
	(*Crash)(nil),                 // 13: api.resources.ceph.v1.Crash
	(*ClusterStats)(nil),          // 14: api.resources.ceph.v1.ClusterStats
	(*ClusterRadar)(nil),          // 15: api.resources.ceph.v1.ClusterRadar
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
}
var file_api_resources_ceph_v1_stats_proto_depIdxs = []int32{
	16, // 0: api.resources.ceph.v1.MonService.created_since:type_name -> google.protobuf.Timestamp
	16, // 1: api.resources.ceph.v1.MonService.updated_since:type_name -> google.protobuf.Timestamp
	16, // 2: api.resources.ceph.v1.MgrService.updated_since:type_name -> google.protobuf.Timestamp
	16, // 3: api.resources.ceph.v1.OsdService.osd_up_updated_since:type_name -> google.protobuf.Timestamp
	16, // 4: api.resources.ceph.v1.OsdService.osd_in_updated_since:type_name -> google.protobuf.Timestamp
	1,  // 5: api.resources.ceph.v1.Services.mon:type_name -> api.resources.ceph.v1.MonService
	2,  // 6: api.resources.ceph.v1.Services.mgr:type_name -> api.resources.ceph.v1.MgrService
	3,  // 7: api.resources.ceph.v1.Services.mds:type_name -> api.resources.ceph.v1.MdsService
	4,  // 8: api.resources.ceph.v1.Services.osd:type_name -> api.resources.ceph.v1.OsdService
	5,  // 9: api.resources.ceph.v1.Services.rgw:type_name -> api.resources.ceph.v1.RgwService
	7,  // 10: api.resources.ceph.v1.Pools.pgs:type_name -> api.resources.ceph.v1.PGs
	8,  // 11: api.resources.ceph.v1.Data.pools:type_name -> api.resources.ceph.v1.Pools
	9,  // 12: api.resources.ceph.v1.Data.objects:type_name -> api.resources.ceph.v1.Objects
	10, // 13: api.resources.ceph.v1.Data.usage:type_name -> api.resources.ceph.v1.Usage
	0,  // 14: api.resources.ceph.v1.ClusterStats.status:type_name -> api.resources.ceph.v1.ClusterHealth
	13, // 15: api.resources.ceph.v1.ClusterStats.crashes:type_name -> api.resources.ceph.v1.Crash
	6,  // 16: api.resources.ceph.v1.ClusterStats.services:type_name -> api.resources.ceph.v1.Services
	11, // 17: api.resources.ceph.v1.ClusterStats.data:type_name -> api.resources.ceph.v1.Data
	12, // 18: api.resources.ceph.v1.ClusterStats.iops:type_name -> api.resources.ceph.v1.IOPS
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_resources_ceph_v1_stats_proto_init() }
func file_api_resources_ceph_v1_stats_proto_init() {
	if File_api_resources_ceph_v1_stats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_resources_ceph_v1_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MgrService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdsService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OsdService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RgwService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Services); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PGs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Objects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Usage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IOPS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Crash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_resources_ceph_v1_stats_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterRadar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_resources_ceph_v1_stats_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_resources_ceph_v1_stats_proto_goTypes,
		DependencyIndexes: file_api_resources_ceph_v1_stats_proto_depIdxs,
		EnumInfos:         file_api_resources_ceph_v1_stats_proto_enumTypes,
		MessageInfos:      file_api_resources_ceph_v1_stats_proto_msgTypes,
	}.Build()
	File_api_resources_ceph_v1_stats_proto = out.File
	file_api_resources_ceph_v1_stats_proto_rawDesc = nil
	file_api_resources_ceph_v1_stats_proto_goTypes = nil
	file_api_resources_ceph_v1_stats_proto_depIdxs = nil
}
