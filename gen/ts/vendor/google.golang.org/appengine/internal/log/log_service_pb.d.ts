// @generated by protoc-gen-es v1.3.0
// @generated from file vendor/google.golang.org/appengine/internal/log/log_service.proto (package appengine, syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";

/**
 * @generated from message appengine.LogServiceError
 */
export declare class LogServiceError extends Message<LogServiceError> {
  constructor(data?: PartialMessage<LogServiceError>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogServiceError";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogServiceError;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogServiceError;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogServiceError;

  static equals(a: LogServiceError | PlainMessage<LogServiceError> | undefined, b: LogServiceError | PlainMessage<LogServiceError> | undefined): boolean;
}

/**
 * @generated from enum appengine.LogServiceError.ErrorCode
 */
export declare enum LogServiceError_ErrorCode {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: INVALID_REQUEST = 1;
   */
  INVALID_REQUEST = 1,

  /**
   * @generated from enum value: STORAGE_ERROR = 2;
   */
  STORAGE_ERROR = 2,
}

/**
 * @generated from message appengine.UserAppLogLine
 */
export declare class UserAppLogLine extends Message<UserAppLogLine> {
  /**
   * @generated from field: required int64 timestamp_usec = 1;
   */
  timestampUsec: bigint;

  /**
   * @generated from field: required int64 level = 2;
   */
  level: bigint;

  /**
   * @generated from field: required string message = 3;
   */
  message: string;

  constructor(data?: PartialMessage<UserAppLogLine>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.UserAppLogLine";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserAppLogLine;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserAppLogLine;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserAppLogLine;

  static equals(a: UserAppLogLine | PlainMessage<UserAppLogLine> | undefined, b: UserAppLogLine | PlainMessage<UserAppLogLine> | undefined): boolean;
}

/**
 * @generated from message appengine.UserAppLogGroup
 */
export declare class UserAppLogGroup extends Message<UserAppLogGroup> {
  /**
   * @generated from field: repeated appengine.UserAppLogLine log_line = 2;
   */
  logLine: UserAppLogLine[];

  constructor(data?: PartialMessage<UserAppLogGroup>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.UserAppLogGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserAppLogGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserAppLogGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserAppLogGroup;

  static equals(a: UserAppLogGroup | PlainMessage<UserAppLogGroup> | undefined, b: UserAppLogGroup | PlainMessage<UserAppLogGroup> | undefined): boolean;
}

/**
 * @generated from message appengine.FlushRequest
 */
export declare class FlushRequest extends Message<FlushRequest> {
  /**
   * @generated from field: optional bytes logs = 1;
   */
  logs?: Uint8Array;

  constructor(data?: PartialMessage<FlushRequest>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.FlushRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlushRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlushRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlushRequest;

  static equals(a: FlushRequest | PlainMessage<FlushRequest> | undefined, b: FlushRequest | PlainMessage<FlushRequest> | undefined): boolean;
}

/**
 * @generated from message appengine.SetStatusRequest
 */
export declare class SetStatusRequest extends Message<SetStatusRequest> {
  /**
   * @generated from field: required string status = 1;
   */
  status: string;

  constructor(data?: PartialMessage<SetStatusRequest>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.SetStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetStatusRequest;

  static equals(a: SetStatusRequest | PlainMessage<SetStatusRequest> | undefined, b: SetStatusRequest | PlainMessage<SetStatusRequest> | undefined): boolean;
}

/**
 * @generated from message appengine.LogOffset
 */
export declare class LogOffset extends Message<LogOffset> {
  /**
   * @generated from field: optional bytes request_id = 1;
   */
  requestId?: Uint8Array;

  constructor(data?: PartialMessage<LogOffset>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogOffset";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogOffset;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogOffset;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogOffset;

  static equals(a: LogOffset | PlainMessage<LogOffset> | undefined, b: LogOffset | PlainMessage<LogOffset> | undefined): boolean;
}

/**
 * @generated from message appengine.LogLine
 */
export declare class LogLine extends Message<LogLine> {
  /**
   * @generated from field: required int64 time = 1;
   */
  time: bigint;

  /**
   * @generated from field: required int32 level = 2;
   */
  level: number;

  /**
   * @generated from field: required string log_message = 3;
   */
  logMessage: string;

  constructor(data?: PartialMessage<LogLine>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogLine";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogLine;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogLine;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogLine;

  static equals(a: LogLine | PlainMessage<LogLine> | undefined, b: LogLine | PlainMessage<LogLine> | undefined): boolean;
}

/**
 * @generated from message appengine.RequestLog
 */
export declare class RequestLog extends Message<RequestLog> {
  /**
   * @generated from field: required string app_id = 1;
   */
  appId: string;

  /**
   * @generated from field: optional string module_id = 37 [default = "default"];
   */
  moduleId?: string;

  /**
   * @generated from field: required string version_id = 2;
   */
  versionId: string;

  /**
   * @generated from field: required bytes request_id = 3;
   */
  requestId: Uint8Array;

  /**
   * @generated from field: optional appengine.LogOffset offset = 35;
   */
  offset?: LogOffset;

  /**
   * @generated from field: required string ip = 4;
   */
  ip: string;

  /**
   * @generated from field: optional string nickname = 5;
   */
  nickname?: string;

  /**
   * @generated from field: required int64 start_time = 6;
   */
  startTime: bigint;

  /**
   * @generated from field: required int64 end_time = 7;
   */
  endTime: bigint;

  /**
   * @generated from field: required int64 latency = 8;
   */
  latency: bigint;

  /**
   * @generated from field: required int64 mcycles = 9;
   */
  mcycles: bigint;

  /**
   * @generated from field: required string method = 10;
   */
  method: string;

  /**
   * @generated from field: required string resource = 11;
   */
  resource: string;

  /**
   * @generated from field: required string http_version = 12;
   */
  httpVersion: string;

  /**
   * @generated from field: required int32 status = 13;
   */
  status: number;

  /**
   * @generated from field: required int64 response_size = 14;
   */
  responseSize: bigint;

  /**
   * @generated from field: optional string referrer = 15;
   */
  referrer?: string;

  /**
   * @generated from field: optional string user_agent = 16;
   */
  userAgent?: string;

  /**
   * @generated from field: required string url_map_entry = 17;
   */
  urlMapEntry: string;

  /**
   * @generated from field: required string combined = 18;
   */
  combined: string;

  /**
   * @generated from field: optional int64 api_mcycles = 19;
   */
  apiMcycles?: bigint;

  /**
   * @generated from field: optional string host = 20;
   */
  host?: string;

  /**
   * @generated from field: optional double cost = 21;
   */
  cost?: number;

  /**
   * @generated from field: optional string task_queue_name = 22;
   */
  taskQueueName?: string;

  /**
   * @generated from field: optional string task_name = 23;
   */
  taskName?: string;

  /**
   * @generated from field: optional bool was_loading_request = 24;
   */
  wasLoadingRequest?: boolean;

  /**
   * @generated from field: optional int64 pending_time = 25;
   */
  pendingTime?: bigint;

  /**
   * @generated from field: optional int32 replica_index = 26 [default = -1];
   */
  replicaIndex?: number;

  /**
   * @generated from field: optional bool finished = 27 [default = true];
   */
  finished?: boolean;

  /**
   * @generated from field: optional bytes clone_key = 28;
   */
  cloneKey?: Uint8Array;

  /**
   * @generated from field: repeated appengine.LogLine line = 29;
   */
  line: LogLine[];

  /**
   * @generated from field: optional bool lines_incomplete = 36;
   */
  linesIncomplete?: boolean;

  /**
   * @generated from field: optional bytes app_engine_release = 38;
   */
  appEngineRelease?: Uint8Array;

  /**
   * @generated from field: optional int32 exit_reason = 30;
   */
  exitReason?: number;

  /**
   * @generated from field: optional bool was_throttled_for_time = 31;
   */
  wasThrottledForTime?: boolean;

  /**
   * @generated from field: optional bool was_throttled_for_requests = 32;
   */
  wasThrottledForRequests?: boolean;

  /**
   * @generated from field: optional int64 throttled_time = 33;
   */
  throttledTime?: bigint;

  /**
   * @generated from field: optional bytes server_name = 34;
   */
  serverName?: Uint8Array;

  constructor(data?: PartialMessage<RequestLog>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.RequestLog";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestLog;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestLog;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestLog;

  static equals(a: RequestLog | PlainMessage<RequestLog> | undefined, b: RequestLog | PlainMessage<RequestLog> | undefined): boolean;
}

/**
 * @generated from message appengine.LogModuleVersion
 */
export declare class LogModuleVersion extends Message<LogModuleVersion> {
  /**
   * @generated from field: optional string module_id = 1 [default = "default"];
   */
  moduleId?: string;

  /**
   * @generated from field: optional string version_id = 2;
   */
  versionId?: string;

  constructor(data?: PartialMessage<LogModuleVersion>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogModuleVersion";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogModuleVersion;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogModuleVersion;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogModuleVersion;

  static equals(a: LogModuleVersion | PlainMessage<LogModuleVersion> | undefined, b: LogModuleVersion | PlainMessage<LogModuleVersion> | undefined): boolean;
}

/**
 * @generated from message appengine.LogReadRequest
 */
export declare class LogReadRequest extends Message<LogReadRequest> {
  /**
   * @generated from field: required string app_id = 1;
   */
  appId: string;

  /**
   * @generated from field: repeated string version_id = 2;
   */
  versionId: string[];

  /**
   * @generated from field: repeated appengine.LogModuleVersion module_version = 19;
   */
  moduleVersion: LogModuleVersion[];

  /**
   * @generated from field: optional int64 start_time = 3;
   */
  startTime?: bigint;

  /**
   * @generated from field: optional int64 end_time = 4;
   */
  endTime?: bigint;

  /**
   * @generated from field: optional appengine.LogOffset offset = 5;
   */
  offset?: LogOffset;

  /**
   * @generated from field: repeated bytes request_id = 6;
   */
  requestId: Uint8Array[];

  /**
   * @generated from field: optional int32 minimum_log_level = 7;
   */
  minimumLogLevel?: number;

  /**
   * @generated from field: optional bool include_incomplete = 8;
   */
  includeIncomplete?: boolean;

  /**
   * @generated from field: optional int64 count = 9;
   */
  count?: bigint;

  /**
   * @generated from field: optional string combined_log_regex = 14;
   */
  combinedLogRegex?: string;

  /**
   * @generated from field: optional string host_regex = 15;
   */
  hostRegex?: string;

  /**
   * @generated from field: optional int32 replica_index = 16;
   */
  replicaIndex?: number;

  /**
   * @generated from field: optional bool include_app_logs = 10;
   */
  includeAppLogs?: boolean;

  /**
   * @generated from field: optional int32 app_logs_per_request = 17;
   */
  appLogsPerRequest?: number;

  /**
   * @generated from field: optional bool include_host = 11;
   */
  includeHost?: boolean;

  /**
   * @generated from field: optional bool include_all = 12;
   */
  includeAll?: boolean;

  /**
   * @generated from field: optional bool cache_iterator = 13;
   */
  cacheIterator?: boolean;

  /**
   * @generated from field: optional int32 num_shards = 18;
   */
  numShards?: number;

  constructor(data?: PartialMessage<LogReadRequest>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogReadRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogReadRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogReadRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogReadRequest;

  static equals(a: LogReadRequest | PlainMessage<LogReadRequest> | undefined, b: LogReadRequest | PlainMessage<LogReadRequest> | undefined): boolean;
}

/**
 * @generated from message appengine.LogReadResponse
 */
export declare class LogReadResponse extends Message<LogReadResponse> {
  /**
   * @generated from field: repeated appengine.RequestLog log = 1;
   */
  log: RequestLog[];

  /**
   * @generated from field: optional appengine.LogOffset offset = 2;
   */
  offset?: LogOffset;

  /**
   * @generated from field: optional int64 last_end_time = 3;
   */
  lastEndTime?: bigint;

  constructor(data?: PartialMessage<LogReadResponse>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogReadResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogReadResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogReadResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogReadResponse;

  static equals(a: LogReadResponse | PlainMessage<LogReadResponse> | undefined, b: LogReadResponse | PlainMessage<LogReadResponse> | undefined): boolean;
}

/**
 * @generated from message appengine.LogUsageRecord
 */
export declare class LogUsageRecord extends Message<LogUsageRecord> {
  /**
   * @generated from field: optional string version_id = 1;
   */
  versionId?: string;

  /**
   * @generated from field: optional int32 start_time = 2;
   */
  startTime?: number;

  /**
   * @generated from field: optional int32 end_time = 3;
   */
  endTime?: number;

  /**
   * @generated from field: optional int64 count = 4;
   */
  count?: bigint;

  /**
   * @generated from field: optional int64 total_size = 5;
   */
  totalSize?: bigint;

  /**
   * @generated from field: optional int32 records = 6;
   */
  records?: number;

  constructor(data?: PartialMessage<LogUsageRecord>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogUsageRecord";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogUsageRecord;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogUsageRecord;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogUsageRecord;

  static equals(a: LogUsageRecord | PlainMessage<LogUsageRecord> | undefined, b: LogUsageRecord | PlainMessage<LogUsageRecord> | undefined): boolean;
}

/**
 * @generated from message appengine.LogUsageRequest
 */
export declare class LogUsageRequest extends Message<LogUsageRequest> {
  /**
   * @generated from field: required string app_id = 1;
   */
  appId: string;

  /**
   * @generated from field: repeated string version_id = 2;
   */
  versionId: string[];

  /**
   * @generated from field: optional int32 start_time = 3;
   */
  startTime?: number;

  /**
   * @generated from field: optional int32 end_time = 4;
   */
  endTime?: number;

  /**
   * @generated from field: optional uint32 resolution_hours = 5 [default = 1];
   */
  resolutionHours?: number;

  /**
   * @generated from field: optional bool combine_versions = 6;
   */
  combineVersions?: boolean;

  /**
   * @generated from field: optional int32 usage_version = 7;
   */
  usageVersion?: number;

  /**
   * @generated from field: optional bool versions_only = 8;
   */
  versionsOnly?: boolean;

  constructor(data?: PartialMessage<LogUsageRequest>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogUsageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogUsageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogUsageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogUsageRequest;

  static equals(a: LogUsageRequest | PlainMessage<LogUsageRequest> | undefined, b: LogUsageRequest | PlainMessage<LogUsageRequest> | undefined): boolean;
}

/**
 * @generated from message appengine.LogUsageResponse
 */
export declare class LogUsageResponse extends Message<LogUsageResponse> {
  /**
   * @generated from field: repeated appengine.LogUsageRecord usage = 1;
   */
  usage: LogUsageRecord[];

  /**
   * @generated from field: optional appengine.LogUsageRecord summary = 2;
   */
  summary?: LogUsageRecord;

  constructor(data?: PartialMessage<LogUsageResponse>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.LogUsageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogUsageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogUsageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogUsageResponse;

  static equals(a: LogUsageResponse | PlainMessage<LogUsageResponse> | undefined, b: LogUsageResponse | PlainMessage<LogUsageResponse> | undefined): boolean;
}

