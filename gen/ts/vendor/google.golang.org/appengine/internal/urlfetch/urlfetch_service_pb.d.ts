// @generated by protoc-gen-es v1.3.0
// @generated from file vendor/google.golang.org/appengine/internal/urlfetch/urlfetch_service.proto (package appengine, syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";

/**
 * @generated from message appengine.URLFetchServiceError
 */
export declare class URLFetchServiceError extends Message<URLFetchServiceError> {
  constructor(data?: PartialMessage<URLFetchServiceError>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.URLFetchServiceError";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): URLFetchServiceError;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): URLFetchServiceError;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): URLFetchServiceError;

  static equals(a: URLFetchServiceError | PlainMessage<URLFetchServiceError> | undefined, b: URLFetchServiceError | PlainMessage<URLFetchServiceError> | undefined): boolean;
}

/**
 * @generated from enum appengine.URLFetchServiceError.ErrorCode
 */
export declare enum URLFetchServiceError_ErrorCode {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: INVALID_URL = 1;
   */
  INVALID_URL = 1,

  /**
   * @generated from enum value: FETCH_ERROR = 2;
   */
  FETCH_ERROR = 2,

  /**
   * @generated from enum value: UNSPECIFIED_ERROR = 3;
   */
  UNSPECIFIED_ERROR = 3,

  /**
   * @generated from enum value: RESPONSE_TOO_LARGE = 4;
   */
  RESPONSE_TOO_LARGE = 4,

  /**
   * @generated from enum value: DEADLINE_EXCEEDED = 5;
   */
  DEADLINE_EXCEEDED = 5,

  /**
   * @generated from enum value: SSL_CERTIFICATE_ERROR = 6;
   */
  SSL_CERTIFICATE_ERROR = 6,

  /**
   * @generated from enum value: DNS_ERROR = 7;
   */
  DNS_ERROR = 7,

  /**
   * @generated from enum value: CLOSED = 8;
   */
  CLOSED = 8,

  /**
   * @generated from enum value: INTERNAL_TRANSIENT_ERROR = 9;
   */
  INTERNAL_TRANSIENT_ERROR = 9,

  /**
   * @generated from enum value: TOO_MANY_REDIRECTS = 10;
   */
  TOO_MANY_REDIRECTS = 10,

  /**
   * @generated from enum value: MALFORMED_REPLY = 11;
   */
  MALFORMED_REPLY = 11,

  /**
   * @generated from enum value: CONNECTION_ERROR = 12;
   */
  CONNECTION_ERROR = 12,
}

/**
 * @generated from message appengine.URLFetchRequest
 */
export declare class URLFetchRequest extends Message<URLFetchRequest> {
  /**
   * @generated from field: required appengine.URLFetchRequest.RequestMethod Method = 1;
   */
  Method: URLFetchRequest_RequestMethod;

  /**
   * @generated from field: required string Url = 2;
   */
  Url: string;

  /**
   * @generated from field: repeated appengine.URLFetchRequest.Header header = 3;
   */
  header: URLFetchRequest_Header[];

  /**
   * @generated from field: optional bytes Payload = 6;
   */
  Payload?: Uint8Array;

  /**
   * @generated from field: optional bool FollowRedirects = 7 [default = true];
   */
  FollowRedirects?: boolean;

  /**
   * @generated from field: optional double Deadline = 8;
   */
  Deadline?: number;

  /**
   * @generated from field: optional bool MustValidateServerCertificate = 9 [default = true];
   */
  MustValidateServerCertificate?: boolean;

  constructor(data?: PartialMessage<URLFetchRequest>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.URLFetchRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): URLFetchRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): URLFetchRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): URLFetchRequest;

  static equals(a: URLFetchRequest | PlainMessage<URLFetchRequest> | undefined, b: URLFetchRequest | PlainMessage<URLFetchRequest> | undefined): boolean;
}

/**
 * @generated from enum appengine.URLFetchRequest.RequestMethod
 */
export declare enum URLFetchRequest_RequestMethod {
  /**
   * @generated from enum value: GET = 1;
   */
  GET = 1,

  /**
   * @generated from enum value: POST = 2;
   */
  POST = 2,

  /**
   * @generated from enum value: HEAD = 3;
   */
  HEAD = 3,

  /**
   * @generated from enum value: PUT = 4;
   */
  PUT = 4,

  /**
   * @generated from enum value: DELETE = 5;
   */
  DELETE = 5,

  /**
   * @generated from enum value: PATCH = 6;
   */
  PATCH = 6,
}

/**
 * @generated from message appengine.URLFetchRequest.Header
 */
export declare class URLFetchRequest_Header extends Message<URLFetchRequest_Header> {
  /**
   * @generated from field: required string Key = 4;
   */
  Key: string;

  /**
   * @generated from field: required string Value = 5;
   */
  Value: string;

  constructor(data?: PartialMessage<URLFetchRequest_Header>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.URLFetchRequest.Header";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): URLFetchRequest_Header;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): URLFetchRequest_Header;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): URLFetchRequest_Header;

  static equals(a: URLFetchRequest_Header | PlainMessage<URLFetchRequest_Header> | undefined, b: URLFetchRequest_Header | PlainMessage<URLFetchRequest_Header> | undefined): boolean;
}

/**
 * @generated from message appengine.URLFetchResponse
 */
export declare class URLFetchResponse extends Message<URLFetchResponse> {
  /**
   * @generated from field: optional bytes Content = 1;
   */
  Content?: Uint8Array;

  /**
   * @generated from field: required int32 StatusCode = 2;
   */
  StatusCode: number;

  /**
   * @generated from field: repeated appengine.URLFetchResponse.Header header = 3;
   */
  header: URLFetchResponse_Header[];

  /**
   * @generated from field: optional bool ContentWasTruncated = 6 [default = false];
   */
  ContentWasTruncated?: boolean;

  /**
   * @generated from field: optional int64 ExternalBytesSent = 7;
   */
  ExternalBytesSent?: bigint;

  /**
   * @generated from field: optional int64 ExternalBytesReceived = 8;
   */
  ExternalBytesReceived?: bigint;

  /**
   * @generated from field: optional string FinalUrl = 9;
   */
  FinalUrl?: string;

  /**
   * @generated from field: optional int64 ApiCpuMilliseconds = 10 [default = 0];
   */
  ApiCpuMilliseconds?: bigint;

  /**
   * @generated from field: optional int64 ApiBytesSent = 11 [default = 0];
   */
  ApiBytesSent?: bigint;

  /**
   * @generated from field: optional int64 ApiBytesReceived = 12 [default = 0];
   */
  ApiBytesReceived?: bigint;

  constructor(data?: PartialMessage<URLFetchResponse>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.URLFetchResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): URLFetchResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): URLFetchResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): URLFetchResponse;

  static equals(a: URLFetchResponse | PlainMessage<URLFetchResponse> | undefined, b: URLFetchResponse | PlainMessage<URLFetchResponse> | undefined): boolean;
}

/**
 * @generated from message appengine.URLFetchResponse.Header
 */
export declare class URLFetchResponse_Header extends Message<URLFetchResponse_Header> {
  /**
   * @generated from field: required string Key = 4;
   */
  Key: string;

  /**
   * @generated from field: required string Value = 5;
   */
  Value: string;

  constructor(data?: PartialMessage<URLFetchResponse_Header>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "appengine.URLFetchResponse.Header";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): URLFetchResponse_Header;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): URLFetchResponse_Header;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): URLFetchResponse_Header;

  static equals(a: URLFetchResponse_Header | PlainMessage<URLFetchResponse_Header> | undefined, b: URLFetchResponse_Header | PlainMessage<URLFetchResponse_Header> | undefined): boolean;
}

