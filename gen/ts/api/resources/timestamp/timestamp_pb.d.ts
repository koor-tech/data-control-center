// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// @generated by protoc-gen-es v1.3.0
// @generated from file api/resources/timestamp/timestamp.proto (package resources.timestamp, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp as Timestamp$1 } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Timestamp for storage messages.  We've defined a new local type wrapper
 * of google.protobuf.Timestamp so we can implement sql.Scanner and sql.Valuer
 * interfaces.  See:
 * https://golang.org/pkg/database/sql/#Scanner
 * https://golang.org/pkg/database/sql/driver/#Valuer
 *
 * @generated from message resources.timestamp.Timestamp
 */
export declare class Timestamp extends Message<Timestamp> {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp$1;

  constructor(data?: PartialMessage<Timestamp>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "resources.timestamp.Timestamp";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Timestamp;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Timestamp;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Timestamp;

  static equals(a: Timestamp | PlainMessage<Timestamp> | undefined, b: Timestamp | PlainMessage<Timestamp> | undefined): boolean;
}

