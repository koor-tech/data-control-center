// @generated by protoc-gen-es v1.3.1
// @generated from file api/services/stats/stats.proto (package stats, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message stats.MonService
 */
export declare class MonService extends Message<MonService> {
  /**
   * @generated from field: int32 daemon_count = 1;
   */
  daemonCount: number;

  /**
   * @generated from field: string quorum = 2;
   */
  quorum: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 4;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<MonService>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.MonService";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MonService;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MonService;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MonService;

  static equals(a: MonService | PlainMessage<MonService> | undefined, b: MonService | PlainMessage<MonService> | undefined): boolean;
}

/**
 * @generated from message stats.MgrService
 */
export declare class MgrService extends Message<MgrService> {
  /**
   * @generated from field: string active = 1;
   */
  active: string;

  /**
   * @generated from field: repeated string standbys = 2;
   */
  standbys: string[];

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 4;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<MgrService>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.MgrService";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MgrService;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MgrService;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MgrService;

  static equals(a: MgrService | PlainMessage<MgrService> | undefined, b: MgrService | PlainMessage<MgrService> | undefined): boolean;
}

/**
 * @generated from message stats.MdsService
 */
export declare class MdsService extends Message<MdsService> {
  /**
   * @generated from field: int32 daemons_up = 1;
   */
  daemonsUp: number;

  /**
   * @generated from field: int32 hot_standby_count = 2;
   */
  hotStandbyCount: number;

  constructor(data?: PartialMessage<MdsService>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.MdsService";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MdsService;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MdsService;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MdsService;

  static equals(a: MdsService | PlainMessage<MdsService> | undefined, b: MdsService | PlainMessage<MdsService> | undefined): boolean;
}

/**
 * @generated from message stats.OsdService
 */
export declare class OsdService extends Message<OsdService> {
  /**
   * @generated from field: int32 osd_count = 1;
   */
  osdCount: number;

  /**
   * @generated from field: int32 osd_up = 2;
   */
  osdUp: number;

  /**
   * @generated from field: int32 osd_in = 3;
   */
  osdIn: number;

  /**
   * @generated from field: google.protobuf.Timestamp osd_up_updated_at = 4;
   */
  osdUpUpdatedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp osd_in_updated_at = 5;
   */
  osdInUpdatedAt?: Timestamp;

  constructor(data?: PartialMessage<OsdService>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.OsdService";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OsdService;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OsdService;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OsdService;

  static equals(a: OsdService | PlainMessage<OsdService> | undefined, b: OsdService | PlainMessage<OsdService> | undefined): boolean;
}

/**
 * @generated from message stats.RgwService
 */
export declare class RgwService extends Message<RgwService> {
  /**
   * @generated from field: int32 active_daemon = 1;
   */
  activeDaemon: number;

  /**
   * @generated from field: int32 host_count = 2;
   */
  hostCount: number;

  /**
   * @generated from field: int32 zone_count = 3;
   */
  zoneCount: number;

  constructor(data?: PartialMessage<RgwService>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.RgwService";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RgwService;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RgwService;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RgwService;

  static equals(a: RgwService | PlainMessage<RgwService> | undefined, b: RgwService | PlainMessage<RgwService> | undefined): boolean;
}

/**
 * @generated from message stats.Services
 */
export declare class Services extends Message<Services> {
  /**
   * @generated from field: stats.MonService mon = 1;
   */
  mon?: MonService;

  /**
   * @generated from field: stats.MgrService mgr = 2;
   */
  mgr?: MgrService;

  /**
   * @generated from field: stats.MdsService mds = 3;
   */
  mds?: MdsService;

  /**
   * @generated from field: stats.OsdService osd = 4;
   */
  osd?: OsdService;

  /**
   * @generated from field: stats.RgwService rgw = 5;
   */
  rgw?: RgwService;

  constructor(data?: PartialMessage<Services>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.Services";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Services;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Services;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Services;

  static equals(a: Services | PlainMessage<Services> | undefined, b: Services | PlainMessage<Services> | undefined): boolean;
}

/**
 * @generated from message stats.Pgs
 */
export declare class Pgs extends Message<Pgs> {
  /**
   * @generated from field: int32 active_clean = 1;
   */
  activeClean: number;

  constructor(data?: PartialMessage<Pgs>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.Pgs";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Pgs;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Pgs;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Pgs;

  static equals(a: Pgs | PlainMessage<Pgs> | undefined, b: Pgs | PlainMessage<Pgs> | undefined): boolean;
}

/**
 * @generated from message stats.Pools
 */
export declare class Pools extends Message<Pools> {
  /**
   * @generated from field: int32 pools = 1;
   */
  pools: number;

  /**
   * @generated from field: stats.Pgs pgs = 2;
   */
  pgs?: Pgs;

  constructor(data?: PartialMessage<Pools>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.Pools";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Pools;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Pools;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Pools;

  static equals(a: Pools | PlainMessage<Pools> | undefined, b: Pools | PlainMessage<Pools> | undefined): boolean;
}

/**
 * @generated from message stats.Objects
 */
export declare class Objects extends Message<Objects> {
  /**
   * @generated from field: int32 object_count = 1;
   */
  objectCount: number;

  /**
   * @generated from field: string size = 2;
   */
  size: string;

  constructor(data?: PartialMessage<Objects>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.Objects";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Objects;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Objects;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Objects;

  static equals(a: Objects | PlainMessage<Objects> | undefined, b: Objects | PlainMessage<Objects> | undefined): boolean;
}

/**
 * @generated from message stats.Usage
 */
export declare class Usage extends Message<Usage> {
  /**
   * @generated from field: int64 used = 1;
   */
  used: bigint;

  /**
   * @generated from field: int64 available = 2;
   */
  available: bigint;

  /**
   * @generated from field: int64 total = 3;
   */
  total: bigint;

  constructor(data?: PartialMessage<Usage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.Usage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Usage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Usage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Usage;

  static equals(a: Usage | PlainMessage<Usage> | undefined, b: Usage | PlainMessage<Usage> | undefined): boolean;
}

/**
 * @generated from message stats.Data
 */
export declare class Data extends Message<Data> {
  /**
   * @generated from field: int32 volumes = 1;
   */
  volumes: number;

  /**
   * @generated from field: stats.Pools pools = 2;
   */
  pools?: Pools;

  /**
   * @generated from field: stats.Objects objects = 3;
   */
  objects?: Objects;

  /**
   * @generated from field: stats.Usage usage = 4;
   */
  usage?: Usage;

  constructor(data?: PartialMessage<Data>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.Data";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Data;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Data;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Data;

  static equals(a: Data | PlainMessage<Data> | undefined, b: Data | PlainMessage<Data> | undefined): boolean;
}

/**
 * @generated from message stats.Io
 */
export declare class Io extends Message<Io> {
  /**
   * @generated from field: string client_read = 1;
   */
  clientRead: string;

  /**
   * @generated from field: string client_read_ops = 2;
   */
  clientReadOps: string;

  /**
   * @generated from field: string client_write_ops = 3;
   */
  clientWriteOps: string;

  constructor(data?: PartialMessage<Io>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.Io";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Io;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Io;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Io;

  static equals(a: Io | PlainMessage<Io> | undefined, b: Io | PlainMessage<Io> | undefined): boolean;
}

/**
 * @generated from message stats.Crash
 */
export declare class Crash extends Message<Crash> {
  /**
   * @generated from field: string description = 1;
   */
  description: string;

  constructor(data?: PartialMessage<Crash>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.Crash";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Crash;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Crash;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Crash;

  static equals(a: Crash | PlainMessage<Crash> | undefined, b: Crash | PlainMessage<Crash> | undefined): boolean;
}

/**
 * @generated from message stats.ClusterStatusResponse
 */
export declare class ClusterStatusResponse extends Message<ClusterStatusResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * @generated from field: repeated stats.Crash crashes = 3;
   */
  crashes: Crash[];

  /**
   * @generated from field: stats.Services services = 4;
   */
  services?: Services;

  /**
   * @generated from field: stats.Data data = 5;
   */
  data?: Data;

  /**
   * @generated from field: string test = 6;
   */
  test: string;

  /**
   * @generated from field: stats.Io io = 7;
   */
  io?: Io;

  constructor(data?: PartialMessage<ClusterStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stats.ClusterStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterStatusResponse;

  static equals(a: ClusterStatusResponse | PlainMessage<ClusterStatusResponse> | undefined, b: ClusterStatusResponse | PlainMessage<ClusterStatusResponse> | undefined): boolean;
}

