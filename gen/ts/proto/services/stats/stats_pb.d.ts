// @generated by protoc-gen-es v1.3.0
// @generated from file proto/services/stats/stats.proto (package services.cluster, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message services.cluster.StreamRequest
 */
export declare class StreamRequest extends Message<StreamRequest> {
  constructor(data?: PartialMessage<StreamRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "services.cluster.StreamRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamRequest;

  static equals(a: StreamRequest | PlainMessage<StreamRequest> | undefined, b: StreamRequest | PlainMessage<StreamRequest> | undefined): boolean;
}

/**
 * @generated from message services.cluster.StreamResponse
 */
export declare class StreamResponse extends Message<StreamResponse> {
  /**
   * @generated from oneof services.cluster.StreamResponse.message
   */
  message: {
    /**
     * @generated from field: bool todo = 1;
     */
    value: boolean;
    case: "todo";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<StreamResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "services.cluster.StreamResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamResponse;

  static equals(a: StreamResponse | PlainMessage<StreamResponse> | undefined, b: StreamResponse | PlainMessage<StreamResponse> | undefined): boolean;
}

